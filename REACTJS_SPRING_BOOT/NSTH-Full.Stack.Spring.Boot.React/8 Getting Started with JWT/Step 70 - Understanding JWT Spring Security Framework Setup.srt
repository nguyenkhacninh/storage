1
00:00:00,512 --> 00:00:02,048
<font color="#cbcbcb">Let's review</font>

2
00:00:02,304 --> 00:00:03,328
<font color="#bcbcbc">The code that is set up</font>

3
00:00:03,584 --> 00:00:04,864
<font color="#bababa">Bjwt flameburger</font>

4
00:00:05,376 --> 00:00:08,448
<font color="#f1f1f1">We saw that there were a number of resources that are being</font>

5
00:00:08,704 --> 00:00:09,216
<font color="#e8e8e8">Exposed</font>

6
00:00:09,728 --> 00:00:10,240
<font color="#eaeaea">When</font>

7
00:00:10,496 --> 00:00:11,520
<font color="#d6d6d6">You do app.</font>

8
00:00:12,544 --> 00:00:13,568
<font color="#d3d3d3">/authenticate</font>

9
00:00:13,824 --> 00:00:15,360
<font color="#fcfcfc">The expected request was</font>

10
00:00:15,616 --> 00:00:20,736
<font color="#f1f1f1">With a username and password and we got a response with the token JWT</font>

11
00:00:22,528 --> 00:00:23,296
<font color="#f3f3f3">Videos of MattyB</font>

12
00:00:24,320 --> 00:00:25,600
<font color="#dcdcdc">Wendy wanted to refresh</font>

13
00:00:26,112 --> 00:00:27,136
<font color="#fcfcfc">What do you need to do</font>

14
00:00:27,392 --> 00:00:29,440
<font color="#dbdbdb">You need to send a gift request</font>

15
00:00:29,952 --> 00:00:31,232
<font color="#dddddd">To this refresh</font>

16
00:00:31,488 --> 00:00:32,000
<font color="#f8f8f8">URL</font>

17
00:00:32,256 --> 00:00:33,280
<font color="#f4f4f4">That would help us in</font>

18
00:00:33,792 --> 00:00:37,120
<font color="#dfdfdf">Refreshing the token there is nothing that you need to send along with the gator request</font>

19
00:00:37,376 --> 00:00:37,888
<font color="#c6c6c6">He's</font>

20
00:00:38,144 --> 00:00:39,680
<font color="#fcfcfc">Authorization header</font>

21
00:00:40,192 --> 00:00:40,960
<font color="#e1e1e1">Baby</font>

22
00:00:41,216 --> 00:00:42,752
<font color="#efefef">JWT token</font>

23
00:00:43,008 --> 00:00:47,872
<font color="#ebebeb">The only other kind of request letter I want to request a resource</font>

24
00:00:48,384 --> 00:00:51,968
<font color="#cdcdcd">I want you to get requests or opposed to Auto put already</font>

25
00:00:52,224 --> 00:00:52,992
<font color="#f5f5f5">What do you need to do</font>

26
00:00:53,248 --> 00:00:55,040
<font color="#dbdbdb">You need to send a header</font>

27
00:00:56,064 --> 00:00:57,088
<font color="#ebebeb">Dgwt</font>

28
00:00:57,344 --> 00:00:59,392
<font color="#e7e7e7">Dokkan you need to send authorization header</font>

29
00:00:59,648 --> 00:01:00,416
<font color="#c1c1c1">With bated</font>

30
00:01:01,184 --> 00:01:02,464
<font color="#fafafa">The JWT token</font>

31
00:01:02,720 --> 00:01:04,256
<font color="#fcfcfc">This is what we saw in</font>

32
00:01:06,304 --> 00:01:08,352
<font color="#fafafa">What are the important things to understand this</font>

33
00:01:08,608 --> 00:01:09,120
<font color="#b3b3b3">Twt</font>

34
00:01:09,376 --> 00:01:11,936
<font color="#d4d4d4">Tokens are very very complex to handle length</font>

35
00:01:12,192 --> 00:01:13,216
<font color="#f3f3f3">If you see this one</font>

36
00:01:13,472 --> 00:01:15,008
<font color="#e9e9e9">It's so huge like this</font>

37
00:01:15,264 --> 00:01:18,592
<font color="#d4d4d4">What are the tokens which we used in our own application and this is huge</font>

38
00:01:19,104 --> 00:01:19,872
<font color="#bfbfbf">Another reason right</font>

39
00:01:20,128 --> 00:01:25,760
<font color="#e6e6e6">Putting all token processing we have a file called JWT token UK</font>

40
00:01:26,016 --> 00:01:28,064
<font color="#ebebeb">Diesel plus in creating tokens</font>

41
00:01:28,576 --> 00:01:34,720
<font color="#eaeaea">Delta's in getting to find out what is the username what are the rules that</font>

42
00:01:35,232 --> 00:01:36,000
<font color="#b6b6b6">Allowed for hospice</font>

43
00:01:38,304 --> 00:01:38,816
<font color="#fcfcfc">He has</font>

44
00:01:39,072 --> 00:01:41,120
<font color="#d6d6d6">There are different claims</font>

45
00:01:43,680 --> 00:01:45,472
<font color="#eaeaea">Helps you to get details from a token</font>

46
00:01:45,984 --> 00:01:49,568
<font color="#fbfbfb">As well as it helps you to create a token when</font>

47
00:01:50,592 --> 00:01:52,128
<font color="#cfcfcf">It also takes care of only</font>

48
00:01:52,384 --> 00:01:53,920
<font color="#c9c9c9">Expiration date in China</font>

49
00:01:54,944 --> 00:01:58,272
<font color="#c5c5c5">You need to calculate when in Spanish</font>

50
00:01:58,784 --> 00:02:01,344
<font color="#f8f8f8">When I go to token what is expiration date on it</font>

51
00:02:01,600 --> 00:02:02,880
<font color="#8f8f8f">Adhesive past expiry</font>

52
00:02:03,904 --> 00:02:05,184
<font color="#f8f8f8">The one that kind of logic</font>

53
00:02:05,440 --> 00:02:05,952
<font color="#bababa">Built-in</font>

54
00:02:06,208 --> 00:02:08,256
<font color="#f9f9f9">JWT token YouTube</font>

55
00:02:08,768 --> 00:02:12,608
<font color="#e3e3e3">This is a fine and you'll see that there are a number of methods are present in here</font>

56
00:02:12,864 --> 00:02:14,912
<font color="#d8d8d8">Get username get expiration date</font>

57
00:02:15,680 --> 00:02:16,704
<font color="#c6c6c6">East token expired</font>

58
00:02:16,960 --> 00:02:17,984
<font color="#ececec">Genedata token</font>

59
00:02:19,008 --> 00:02:19,776
<font color="#f3f3f3">Official token</font>

60
00:02:20,288 --> 00:02:22,592
<font color="#e2e2e2">Validated</font>

61
00:02:23,104 --> 00:02:26,432
<font color="#f3f3f3">Stuff is done inside</font>

62
00:02:29,248 --> 00:02:30,272
<font color="#e0e0e0">Is extensively used</font>

63
00:02:31,040 --> 00:02:31,552
<font color="#f7f7f7">Bjwt</font>

64
00:02:32,576 --> 00:02:33,344
<font color="#e1e1e1">Interesting thing</font>

65
00:02:33,600 --> 00:02:36,928
<font color="#e6e6e6">Is the JWT token you makes use of the JW</font>

66
00:02:37,184 --> 00:02:38,208
<font color="#dfdfdf">PS classic</font>

67
00:02:39,744 --> 00:02:40,256
<font color="#e6e6e6">This is from</font>

68
00:02:40,512 --> 00:02:42,048
<font color="#cccccc">The lottery that we had</font>

69
00:02:42,304 --> 00:02:42,816
<font color="#cfcfcf">Important</font>

70
00:02:44,096 --> 00:02:44,864
<font color="#fbfbfb">If I do a sink</font>

71
00:02:45,376 --> 00:02:45,888
<font color="#9e9e9e">UT.</font>

72
00:02:46,144 --> 00:02:46,912
<font color="#e1e1e1">She's coming from</font>

73
00:02:47,680 --> 00:02:48,448
<font color="#d7d7d7">DJ W</font>

74
00:02:49,728 --> 00:02:50,496
<font color="#e5e5e5">Which we added in</font>

75
00:02:52,544 --> 00:02:55,616
<font color="#dcdcdc">The mixed ones did resources themselves</font>

76
00:02:56,640 --> 00:02:58,688
<font color="#747474">He won't expose these two urls</font>

77
00:02:59,456 --> 00:03:01,504
<font color="#dedede">The input for this order request for this</font>

78
00:03:02,272 --> 00:03:03,040
<font color="#fcfcfc">Username and password</font>

79
00:03:03,552 --> 00:03:04,832
<font color="#909090">This phone is stupid</font>

80
00:03:05,344 --> 00:03:07,904
<font color="#e5e5e5">So this is like any restful service that you would want</font>

81
00:03:09,184 --> 00:03:12,512
<font color="#e5e5e5">Toluca's 8080 / authenticate what would we typically do</font>

82
00:03:12,768 --> 00:03:14,048
<font color="#eeeeee">EPL results</font>

83
00:03:15,072 --> 00:03:16,864
<font color="#cdcdcd">Same thing with a splash of fish</font>

84
00:03:17,632 --> 00:03:20,704
<font color="#ededed">For this is the token and the output</font>

85
00:03:20,960 --> 00:03:23,008
<font color="#e0e0e0">Again is a new token value</font>

86
00:03:23,264 --> 00:03:26,336
<font color="#dcdcdc">I'm not really put the response in here but the refresh token</font>

87
00:03:26,592 --> 00:03:28,128
<font color="#f0f0f0">Would also return a response</font>

88
00:03:28,384 --> 00:03:29,664
<font color="#d6d6d6">Containing</font>

89
00:03:29,920 --> 00:03:31,456
<font color="#f3f3f3">How are these resources implemented</font>

90
00:03:32,224 --> 00:03:32,992
<font color="#f4f4f4">There are four</font>

91
00:03:33,248 --> 00:03:34,272
<font color="#fcfcfc">Important files</font>

92
00:03:35,296 --> 00:03:35,808
<font color="#d7d7d7">The code for this</font>

93
00:03:37,088 --> 00:03:39,648
<font color="#dddddd">Digital token request and response</font>

94
00:03:40,672 --> 00:03:41,696
<font color="#d9d9d9">Represent this request</font>

95
00:03:41,952 --> 00:03:42,720
<font color="#fcfcfc">And this response</font>

96
00:03:43,232 --> 00:03:46,048
<font color="#e7e7e7">Do you see that token request at the username and password and</font>

97
00:03:48,352 --> 00:03:49,376
<font color="#f0f0f0">As simple as that</font>

98
00:03:50,144 --> 00:03:52,960
<font color="#dbdbdb">And you'll see that the authentication rest controller</font>

99
00:03:53,216 --> 00:03:53,984
<font color="#ebebeb">Contains</font>

100
00:03:54,240 --> 00:03:57,568
<font color="#f8f8f8">The important methods to be able to handle our resources</font>

101
00:03:58,080 --> 00:03:59,616
<font color="#bcbcbc">If you want to refresh</font>

102
00:03:59,872 --> 00:04:01,152
<font color="#aaaaaa">And the creator of vindication</font>

103
00:04:02,176 --> 00:04:02,944
<font color="#afafaf">Toyota</font>

104
00:04:03,200 --> 00:04:04,992
<font color="#e9e9e9">Request mappings for them</font>

105
00:04:05,248 --> 00:04:07,040
<font color="#fcfcfc">You can see that these are being picked up</font>

106
00:04:07,296 --> 00:04:10,368
<font color="#dcdcdc">From the property file so if you look at application. Properties</font>

107
00:04:10,624 --> 00:04:12,160
<font color="#f2f2f2">That's where this URL cycling</font>

108
00:04:15,232 --> 00:04:17,024
<font color="#c7c7c7">The authentic list what it does is it</font>

109
00:04:17,280 --> 00:04:18,047
<font color="#d3d3d3">First uses</font>

110
00:04:18,559 --> 00:04:19,583
<font color="#fcfcfc">Spring Security</font>

111
00:04:19,839 --> 00:04:21,887
<font color="#fbfbfb">To check if the username and password</font>

112
00:04:23,679 --> 00:04:25,215
<font color="#f6f6f6">And password is right</font>

113
00:04:25,471 --> 00:04:28,287
<font color="#9e9e9e">You go ahead and</font>

114
00:04:29,055 --> 00:04:35,199
<font color="#ededed">What does the refresh do refresh plus 6 if token is valid if everything is fine then it gets</font>

115
00:04:35,711 --> 00:04:36,223
<font color="#c4c4c4">End</font>

116
00:04:36,479 --> 00:04:40,831
<font color="#d0d0d0">He takes expiration date and if it's all matching penetrate the token Android</font>

117
00:04:41,343 --> 00:04:45,951
<font color="#e4e4e4">We have a specific exception for authentication which isn't in here</font>

118
00:04:47,487 --> 00:04:49,023
<font color="#eeeeee">These are the important files</font>

119
00:04:49,535 --> 00:04:54,143
<font color="#e9e9e9">Which are corresponding to the implementation of the gate open and the first token resources</font>

120
00:04:54,911 --> 00:04:57,215
<font color="#efefef">Let's consider all the other requests</font>

121
00:04:57,471 --> 00:04:58,495
<font color="#fcfcfc">What should we do</font>

122
00:05:00,543 --> 00:05:04,383
<font color="#cccccc">Send any requests or get a post a foot or a delete</font>

123
00:05:04,639 --> 00:05:05,919
<font color="#fcfcfc">Do any of the resources</font>

124
00:05:06,175 --> 00:05:06,943
<font color="#fcfcfc">What do you want to do</font>

125
00:05:07,199 --> 00:05:08,991
<font color="#dedede">Who wrote the check if there's</font>

126
00:05:09,247 --> 00:05:09,759
<font color="#dfdfdf">Light</font>

127
00:05:10,015 --> 00:05:10,783
<font color="#a0a0a0">Token on it</font>

128
00:05:11,295 --> 00:05:15,391
<font color="#e0e0e0">Authorization header token containing the JWT</font>

129
00:05:15,647 --> 00:05:17,695
<font color="#f9f9f9">And if the JWT token is invalid</font>

130
00:05:18,719 --> 00:05:22,303
<font color="#e5e5e5">U of L application experience how do we Implement such kind of requirements</font>

131
00:05:22,559 --> 00:05:23,327
<font color="#f6f6f6">I want to</font>

132
00:05:23,583 --> 00:05:24,351
<font color="#fcfcfc">Do something</font>

133
00:05:24,607 --> 00:05:25,887
<font color="#fcfcfc">For every request</font>

134
00:05:26,399 --> 00:05:28,959
<font color="#e9e9e9">What do we do is we use something color filter</font>

135
00:05:29,727 --> 00:05:35,103
<font color="#eaeaea">So what we do is we Implement something called a token authorization request filter</font>

136
00:05:35,615 --> 00:05:41,247
<font color="#d9d9d9">2 for every request we want to authorize the JWT token and that's what this Pacific</font>

137
00:05:41,503 --> 00:05:43,039
<font color="#b7b7b7">Filter access to do</font>

138
00:05:43,295 --> 00:05:47,135
<font color="#e5e5e5">What's a Despicable do is check if the user is valid if the user is</font>

139
00:05:47,903 --> 00:05:49,439
<font color="#d9d9d9">The use of JWT token is valid</font>

140
00:05:49,695 --> 00:05:50,463
<font color="#a7a7a7">Token is valid</font>

141
00:05:50,975 --> 00:05:51,999
<font color="#d1d1d1">It would love to use the details</font>

142
00:05:52,255 --> 00:05:53,279
<font color="#d1d1d1">And it would set it</font>

143
00:05:53,535 --> 00:05:54,303
<font color="#eeeeee">In Too Deep</font>

144
00:05:54,559 --> 00:05:56,863
<font color="#e6e6e6">Security context holder. Get count</font>

145
00:05:57,375 --> 00:06:02,751
<font color="#f2f2f2">This is one of the places which is most important to once a user is authenticated and notarized</font>

146
00:06:03,007 --> 00:06:04,287
<font color="#fcfcfc">You put his details</font>

147
00:06:08,127 --> 00:06:08,639
<font color="#c1c1c1">So that</font>

148
00:06:08,895 --> 00:06:10,175
<font color="#ececec">All the others servlet</font>

149
00:06:10,431 --> 00:06:12,223
<font color="#f2f2f2">All the other resources controllers</font>

150
00:06:12,479 --> 00:06:13,759
<font color="#f5f5f5">Would be able to access to user</font>

151
00:06:17,087 --> 00:06:17,855
<font color="#e3e3e3">Lipsi</font>

152
00:06:18,111 --> 00:06:19,647
<font color="#f9f9f9">What did you the details</font>

153
00:06:19,903 --> 00:06:22,975
<font color="#e8e8e8">That the user ID password what are the rules of the user</font>

154
00:06:23,231 --> 00:06:24,511
<font color="#d8d8d8">I stayed in a database</font>

155
00:06:24,767 --> 00:06:27,583
<font color="#bfbfbf">Destiny name that poor bastard in</font>

156
00:06:28,607 --> 00:06:33,983
<font color="#dedede">What Spring Security that says is I don't really want to worry about where your users details are</font>

157
00:06:35,007 --> 00:06:36,031
<font color="#f2f2f2">What do you need to do</font>

158
00:06:36,287 --> 00:06:37,823
<font color="#f7f7f7">Is I give you an interface</font>

159
00:06:38,335 --> 00:06:39,615
<font color="#fcfcfc">You implement interface</font>

160
00:06:39,871 --> 00:06:42,943
<font color="#fafafa">And make sure that you provide the flight implementation</font>

161
00:06:43,455 --> 00:06:46,527
<font color="#e9e9e9">I'll tell you what is the signature and what should be the return value</font>

162
00:06:47,039 --> 00:06:48,063
<font color="#fcfcfc">Implemented</font>

163
00:06:48,319 --> 00:06:52,671
<font color="#e9e9e9">Provide it to me and I take care of using these user details</font>

164
00:06:52,927 --> 00:06:54,719
<font color="#fafafa">To authenticate the user</font>

165
00:06:55,231 --> 00:06:56,255
<font color="#d9d9d9">2 hour rule</font>

166
00:06:56,511 --> 00:06:58,815
<font color="#f0f0f0">Ainsworth providing the user details</font>

167
00:06:59,327 --> 00:07:00,095
<font color="#e5e5e5">What is a Tervis</font>

168
00:07:00,351 --> 00:07:02,143
<font color="#eaeaea">That service is the user details</font>

169
00:07:02,399 --> 00:07:02,911
<font color="#fcfcfc">Service</font>

170
00:07:03,423 --> 00:07:06,495
<font color="#f6f6f6">This is an interface which is defined inside</font>

171
00:07:09,055 --> 00:07:14,943
<font color="#e4e4e4">And what we're doing did the Endeavor user detail Services implementing the user Detail Service</font>

172
00:07:15,455 --> 00:07:17,759
<font color="#b9b9b9">Folding method in the use of detail services</font>

173
00:07:18,015 --> 00:07:19,807
<font color="#d0d0d0">Load music by username to give</font>

174
00:07:20,063 --> 00:07:23,135
<font color="#ededed">Do any username or let you need to do is to provide</font>

175
00:07:23,391 --> 00:07:25,695
<font color="#e3e3e3">And implementation of this interface</font>

176
00:07:25,951 --> 00:07:26,719
<font color="#e6e6e6">User details</font>

177
00:07:27,231 --> 00:07:30,559
<font color="#f5f5f5">The implementation of the user details that we have created</font>

178
00:07:31,327 --> 00:07:31,839
<font color="#fcfcfc">JWT</font>

179
00:07:32,095 --> 00:07:32,607
<font color="#dedede">User</font>

180
00:07:33,631 --> 00:07:34,655
<font color="#fcfcfc">So what do we do</font>

181
00:07:34,911 --> 00:07:40,543
<font color="#d9d9d9">Oh here in the specific user Detail Service is when swing security gives us a username</font>

182
00:07:44,895 --> 00:07:45,919
<font color="#c9c9c9">And it deleted back</font>

183
00:07:46,175 --> 00:07:47,199
<font color="#959595">Indy formatter</font>

184
00:07:47,711 --> 00:07:48,991
<font color="#f6f6f6">JWT user details</font>

185
00:07:49,759 --> 00:07:50,271
<font color="#bdbdbd">Tubidy</font>

186
00:07:51,295 --> 00:07:52,575
<font color="#e2e2e2">The big contract</font>

187
00:07:53,087 --> 00:07:54,367
<font color="#fcfcfc">It is provided by</font>

188
00:07:54,623 --> 00:07:57,183
<font color="#b7b7b7">Sting security people service</font>

189
00:07:57,695 --> 00:07:59,743
<font color="#d2d2d2">And return the user details.</font>

190
00:08:00,255 --> 00:08:02,815
<font color="#ececec">What happens if Spring Security would start</font>

191
00:08:03,071 --> 00:08:03,583
<font color="#fcfcfc">Using this</font>

192
00:08:03,839 --> 00:08:04,607
<font color="#e9e9e9">Everywhere</font>

193
00:08:04,863 --> 00:08:06,655
<font color="#c9c9c9">Where to buy Springfield wants to find out</font>

194
00:08:13,055 --> 00:08:13,823
<font color="#bbbbbb">It's April 1st</font>

195
00:08:14,079 --> 00:08:15,103
<font color="#e3e3e3">Give us a username</font>

196
00:08:15,359 --> 00:08:16,383
<font color="#f9f9f9">Ask for the details</font>

197
00:08:17,151 --> 00:08:18,943
<font color="#e0e0e0">And what is the weather like details</font>

198
00:08:19,455 --> 00:08:22,527
<font color="#c6c6c6">Ring security would take care of getting the password</font>

199
00:08:22,783 --> 00:08:23,551
<font color="#dadada">And all that kind of</font>

200
00:08:24,319 --> 00:08:27,391
<font color="#fafafa">The last part is actually to bring it all</font>

201
00:08:27,647 --> 00:08:28,159
<font color="#fcfcfc">Together</font>

202
00:08:28,671 --> 00:08:30,975
<font color="#cdcdcd">And I have lied but I do stuff that we are configured</font>

203
00:08:31,231 --> 00:08:31,999
<font color="#adadad">Acquiesced</font>

204
00:08:32,255 --> 00:08:36,095
<font color="#e6e6e6">We want to consider our own custom user Detail Service which has a memory details</font>

205
00:08:37,375 --> 00:08:40,191
<font color="#eaeaea">In addition to that be something called a password encoder</font>

206
00:08:40,447 --> 00:08:44,031
<font color="#c5c5c5">Get on Google Store password as it is we would want in Kuwait</font>

207
00:08:44,287 --> 00:08:44,799
<font color="#f6f6f6">End story</font>

208
00:08:45,055 --> 00:08:47,359
<font color="#e1e1e1">And that's why we use a beaker password in Kodi</font>

209
00:08:48,383 --> 00:08:50,687
<font color="#e9e9e9">One statelessness we don't want</font>

210
00:08:51,199 --> 00:08:52,479
<font color="#cbcbcb">Section</font>

211
00:08:52,735 --> 00:08:53,759
<font color="#aeaeae">Creative photos</font>

212
00:08:54,015 --> 00:08:55,039
<font color="#bdbdbd">India application</font>

213
00:08:55,295 --> 00:09:01,439
<font color="#e3e3e3">Rest API we don't want to have any session on This Server Authentication</font>

214
00:09:01,695 --> 00:09:02,463
<font color="#cdcdcd">Entry point</font>

215
00:09:02,975 --> 00:09:06,303
<font color="#ececec">Authentication entry point is all about handling on</font>

216
00:09:06,559 --> 00:09:07,839
<font color="#fcfcfc">Authenticated</font>

217
00:09:08,095 --> 00:09:08,607
<font color="#e6e6e6">Users</font>

218
00:09:12,703 --> 00:09:15,263
<font color="#f8f8f8">What should be the response that we send back</font>

219
00:09:15,775 --> 00:09:20,639
<font color="#e8e8e8">Because of a Bell application the authentication entry point you want to configure a form</font>

220
00:09:20,895 --> 00:09:21,663
<font color="#dedede">A login page</font>

221
00:09:22,175 --> 00:09:24,223
<font color="#dddddd">In the case of the rest API or</font>

222
00:09:24,735 --> 00:09:28,831
<font color="#f4f4f4">In the case of a JWT authenticated Sapa what we would need to do</font>

223
00:09:29,599 --> 00:09:33,695
<font color="#d6d6d6">Is gluten a natural response response</font>

224
00:09:33,951 --> 00:09:35,487
<font color="#e0e0e0">Request. Not have a JWT</font>

225
00:09:36,255 --> 00:09:38,047
<font color="#fbfbfb">And that's what is implemented</font>

226
00:09:39,327 --> 00:09:39,839
<font color="#cfcfcf">RT</font>

227
00:09:41,631 --> 00:09:42,143
<font color="#b9b9b9">Best phones</font>

228
00:09:42,399 --> 00:09:43,167
<font color="#fcfcfc">Authentication</font>

229
00:09:46,495 --> 00:09:47,775
<font color="#d1d1d1">And you see that it wouldn't just</font>

230
00:09:49,311 --> 00:09:50,591
<font color="#fcfcfc">Unauthorized</font>

231
00:09:50,847 --> 00:09:51,359
<font color="#fcfcfc">Response</font>

232
00:09:53,151 --> 00:09:54,687
<font color="#b0b0b0">So give me the Quan figure that</font>

233
00:09:55,711 --> 00:10:00,831
<font color="#e1e1e1">The other thing you need to come to visit. Which we have created the equator Africa</font>

234
00:10:01,087 --> 00:10:02,623
<font color="#dcdcdc">Tied it up with distinct security</font>

235
00:10:02,879 --> 00:10:03,391
<font color="#afafaf">The flame book</font>

236
00:10:03,903 --> 00:10:04,927
<font color="#efefef">The last thing is</font>

237
00:10:05,183 --> 00:10:07,231
<font color="#e0e0e0">At the end of the course will be using something called</font>

238
00:10:07,487 --> 00:10:08,255
<font color="#8f8f8f">Stu console</font>

239
00:10:08,767 --> 00:10:12,095
<font color="#c3c3c3">Prison inmate database and using his to cancel to look at it</font>

240
00:10:13,375 --> 00:10:15,679
<font color="#dddddd">Want to make sure that this URL</font>

241
00:10:15,935 --> 00:10:16,959
<font color="#fcfcfc">It's not secure</font>

242
00:10:20,287 --> 00:10:20,799
<font color="#b5b5b5">Psy.d</font>

243
00:10:24,639 --> 00:10:30,015
<font color="#ededed">That is a default configuration which is already provided by Spring Security WEP security converter adapter</font>

244
00:10:30,271 --> 00:10:33,087
<font color="#eaeaea">Be extended this even when we were including basic m</font>

245
00:10:33,343 --> 00:10:34,367
<font color="#fcfcfc">Basic Authentication</font>

246
00:10:35,391 --> 00:10:36,415
<font color="#cbcbcb">The extended footage</font>

247
00:10:36,671 --> 00:10:37,183
<font color="#d4d4d4">DWTS</font>

248
00:10:38,207 --> 00:10:44,351
<font color="#e6e6e6">The important but this is where the internal user Detail Service is configured and they're saying</font>

249
00:10:44,607 --> 00:10:45,375
<font color="#d7d7d7">YouTube Tuesday</font>

250
00:10:45,631 --> 00:10:46,143
<font color="#d5d5d5">Decrypt</font>

251
00:10:46,399 --> 00:10:47,167
<font color="#f3f3f3">Password</font>

252
00:10:48,447 --> 00:10:50,239
<font color="#e6e6e6">The next important piece of court is this</font>

253
00:10:51,007 --> 00:10:52,799
<font color="#efefef">PSA authentication entry point</font>

254
00:10:54,079 --> 00:10:56,895
<font color="#e8e8e8">Justin Heyman</font>

255
00:10:59,711 --> 00:11:01,503
<font color="#fcfcfc">You want to create a stateless</font>

256
00:11:03,551 --> 00:11:06,111
<font color="#b3b3b3">Zaxby's is very a configuring in defeat</font>

257
00:11:06,367 --> 00:11:07,647
<font color="#fcfcfc">Every request</font>

258
00:11:08,159 --> 00:11:08,927
<font color="#eeeeee">Every request</font>

259
00:11:09,439 --> 00:11:10,207
<font color="#fcfcfc">Should go through</font>

260
00:11:11,487 --> 00:11:12,255
<font color="#f8f8f8">JWT</font>

261
00:11:12,511 --> 00:11:13,535
<font color="#fafafa">Authentication token</font>

262
00:11:14,303 --> 00:11:17,375
<font color="#d8d8d8">If it's long video</font>

263
00:11:17,631 --> 00:11:19,167
<font color="#acacac">Jeffrey McCarthy Johnson look</font>

264
00:11:20,959 --> 00:11:24,543
<font color="#e9e9e9">What are the important things is everything that you're saying is just one X adapter</font>

265
00:11:25,055 --> 00:11:27,871
<font color="#e0e0e0">For the most part you don't need to modify any or</font>

266
00:11:33,759 --> 00:11:34,271
<font color="#a2a2a2">Look real</font>

267
00:11:38,367 --> 00:11:38,879
<font color="#fbfbfb">Little bit</font>

268
00:11:39,647 --> 00:11:42,975
<font color="#f3f3f3">The different resources that are related to JWT are implemented</font>

269
00:11:46,559 --> 00:11:48,095
<font color="#b4b4b4">End the refresh token</font>

270
00:11:49,631 --> 00:11:50,399
<font color="#e2e2e2">Pizza Hut</font>

271
00:11:50,655 --> 00:11:52,447
<font color="#e4e4e4">We are filtering every request</font>

272
00:11:52,703 --> 00:11:54,495
<font color="#e7e7e7">To make sure that every request is</font>

273
00:11:56,543 --> 00:11:58,591
<font color="#f9f9f9">I see you in the next step</font>
