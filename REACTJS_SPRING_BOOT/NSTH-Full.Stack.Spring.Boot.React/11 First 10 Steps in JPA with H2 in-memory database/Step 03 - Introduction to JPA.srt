1
00:00:00,512 --> 00:00:03,072
<font color="#c7c7c7">We come to this video where we were trying to understand</font>

2
00:00:05,632 --> 00:00:06,400
<font color="#fcfcfc">Object relations</font>

3
00:00:07,680 --> 00:00:09,984
<font color="#f4f4f4">We were talking about is the fact that the application</font>

4
00:00:10,752 --> 00:00:12,288
<font color="#eaeaea">Does the baby decide not to objects</font>

5
00:00:16,384 --> 00:00:22,016
<font color="#dedede">So the baby design this employee to ask part-time employees retirement project is different from hell</font>

6
00:00:22,272 --> 00:00:23,552
<font color="#fcfcfc">Do things on the database</font>

7
00:00:24,064 --> 00:00:24,576
<font color="#fcfcfc">Stop</font>

8
00:00:24,832 --> 00:00:25,856
<font color="#d2d2d2">Employee employee</font>

9
00:00:26,368 --> 00:00:28,160
<font color="#f4f4f4">So how does GPS only problem</font>

10
00:00:28,672 --> 00:00:29,952
<font color="#8f8f8f">Jpa provides</font>

11
00:00:30,976 --> 00:00:31,488
<font color="#fafafa">Mapping</font>

12
00:00:32,000 --> 00:00:33,280
<font color="#e4e4e4">You can map application</font>

13
00:00:33,536 --> 00:00:35,072
<font color="#c7c7c7">Glasses</font>

14
00:00:35,328 --> 00:00:36,096
<font color="#fcfcfc">You can say</font>

15
00:00:36,352 --> 00:00:37,120
<font color="#dcdcdc">This class</font>

16
00:00:38,400 --> 00:00:38,912
<font color="#d0d0d0">Stable</font>

17
00:00:39,168 --> 00:00:39,936
<font color="#f2f2f2">Wikipedia</font>

18
00:00:41,984 --> 00:00:42,752
<font color="#fcfcfc">Mapping</font>

19
00:00:43,008 --> 00:00:44,288
<font color="#eaeaea">Between your classes</font>

20
00:00:44,544 --> 00:00:45,312
<font color="#c8c8c8">And the tables</font>

21
00:00:45,568 --> 00:00:46,336
<font color="#fcfcfc">Using things like</font>

22
00:00:46,592 --> 00:00:47,104
<font color="#dadada">Entities</font>

23
00:00:47,616 --> 00:00:48,128
<font color="#787878">Relations</font>

24
00:00:49,152 --> 00:00:51,456
<font color="#e5e5e5">To do something called identity manager</font>

25
00:00:51,712 --> 00:00:52,480
<font color="#cecece">Mini</font>

26
00:00:54,272 --> 00:00:57,088
<font color="#d5d5d5">I want to save a task to the database I can use any</font>

27
00:00:57,344 --> 00:00:57,856
<font color="#efefef">Entitymanager</font>

28
00:00:58,112 --> 00:00:59,136
<font color="#dbdbdb">DaVita Costco object</font>

29
00:00:59,392 --> 00:01:01,440
<font color="#e8e8e8">And it would be able to stay with today.</font>

30
00:01:01,696 --> 00:01:05,024
<font color="#f4f4f4">I would want to get the values of a certain amount of time</font>

31
00:01:05,792 --> 00:01:07,584
<font color="#e6e6e6">But I would want to get the values</font>

32
00:01:07,840 --> 00:01:08,864
<font color="#f9f9f9">Of all the tasks</font>

33
00:01:09,120 --> 00:01:11,168
<font color="#eeeeee">Related to a person I can use the in</font>

34
00:01:11,424 --> 00:01:15,776
<font color="#efefef">Entitymanager also has this features of criteria API</font>

35
00:01:16,032 --> 00:01:17,056
<font color="#dddddd">And jpql</font>

36
00:01:17,568 --> 00:01:18,592
<font color="#fbfbfb">Which provides</font>

37
00:01:23,200 --> 00:01:25,760
<font color="#fcfcfc">So I would want to find some data from the database</font>

38
00:01:26,016 --> 00:01:26,784
<font color="#dbdbdb">I want to do</font>

39
00:01:28,320 --> 00:01:28,832
<font color="#c3c3c3">Searches</font>

40
00:01:32,160 --> 00:01:33,440
<font color="#fcfcfc">You can also use</font>

41
00:01:33,696 --> 00:01:36,000
<font color="#eaeaea">Jpql or criteria API</font>

42
00:01:36,768 --> 00:01:37,280
<font color="#cecece">Querida</font>

43
00:01:38,560 --> 00:01:42,144
<font color="#e8e8e8">Jpql similar to SQL udb using</font>

44
00:01:42,400 --> 00:01:42,912
<font color="#dddddd">Entities</font>

45
00:01:43,424 --> 00:01:44,704
<font color="#fcfcfc">Instructables</font>

46
00:01:44,960 --> 00:01:45,728
<font color="#f1f1f1">In jpql</font>

47
00:01:45,984 --> 00:01:51,872
<font color="#e8e8e8">And criteria API depression survey where you can drive JPL using Java API</font>

48
00:01:52,128 --> 00:01:52,896
<font color="#e2e2e2">Before we can get</font>

49
00:01:53,152 --> 00:01:53,664
<font color="#c4c4c4">Idle Hands</font>

50
00:01:53,920 --> 00:01:54,432
<font color="#909090">Wednesday TV</font>

51
00:01:54,688 --> 00:01:59,296
<font color="#dedede">GTA V look at a few examples of how you can map application</font>

52
00:01:59,552 --> 00:02:02,112
<font color="#d4d4d4">Classes to database</font>

53
00:02:02,368 --> 00:02:06,208
<font color="#ececec">Example of a stable there was a mismatch of how things were</font>

54
00:02:07,232 --> 00:02:07,744
<font color="#dddddd">Class</font>

55
00:02:08,000 --> 00:02:09,024
<font color="#cdcdcd">Multitask object</font>

56
00:02:09,280 --> 00:02:09,792
<font color="#e7e7e7">Andy.</font>

57
00:02:10,560 --> 00:02:11,840
<font color="#f2f2f2">How do we solve that</font>

58
00:02:12,352 --> 00:02:13,376
<font color="#c5c5c5">GPA provider</font>

59
00:02:14,400 --> 00:02:16,704
<font color="#d3d3d3">Shinso here there's an annotation called</font>

60
00:02:17,216 --> 00:02:17,728
<font color="#e8e8e8">Table</font>

61
00:02:18,240 --> 00:02:19,520
<font color="#e3e3e3">The X table annotation</font>

62
00:02:19,776 --> 00:02:20,800
<font color="#e7e7e7">Helps you to map</font>

63
00:02:21,056 --> 00:02:22,080
<font color="#dddddd">Object</font>

64
00:02:22,336 --> 00:02:24,128
<font color="#f5f5f5">Do your table so here I'm saying</font>

65
00:02:24,384 --> 00:02:25,408
<font color="#ececec">Okay this task</font>

66
00:02:25,664 --> 00:02:26,176
<font color="#f4f4f4">Is going to be</font>

67
00:02:26,432 --> 00:02:30,016
<font color="#e3e3e3">Store an instance of class task would be stored</font>

68
00:02:30,784 --> 00:02:31,808
<font color="#c3c3c3">The Entity cast</font>

69
00:02:32,064 --> 00:02:33,600
<font color="#aeaeae">I'm good with an English accent</font>

70
00:02:34,112 --> 00:02:37,184
<font color="#ebebeb">Beauty by putting in at entity annotation on top of</font>

71
00:02:44,352 --> 00:02:44,864
<font color="#f0f0f0">I'm saying</font>

72
00:02:45,120 --> 00:02:49,984
<font color="#f9f9f9">This description feel which is present in here should be stored in a column called</font>

73
00:02:51,776 --> 00:02:53,056
<font color="#fafafa">That's how we map</font>

74
00:02:53,312 --> 00:02:58,176
<font color="#e0e0e0">Soviet description Target data in the table is called Target data ugly map it</font>

75
00:02:58,432 --> 00:03:00,992
<font color="#f0f0f0">By putting add column name is equal to Target</font>

76
00:03:01,504 --> 00:03:03,296
<font color="#f0f0f0">Example of mapping</font>

77
00:03:03,552 --> 00:03:04,064
<font color="#bfbfbf">Feels</font>

78
00:03:05,600 --> 00:03:09,184
<font color="#fafafa">You can also establish relationships between</font>

79
00:03:09,952 --> 00:03:10,464
<font color="#fcfcfc">Different</font>

80
00:03:10,720 --> 00:03:11,488
<font color="#f8f8f8">Entities</font>

81
00:03:11,744 --> 00:03:12,768
<font color="#b1b1b1">Two employees and then</font>

82
00:03:14,560 --> 00:03:18,400
<font color="#fcfcfc">We already looked at the fact that they have a many-to-many relationship</font>

83
00:03:18,656 --> 00:03:24,544
<font color="#e6e6e6">You can use an annotation call at many too many so here I'm saying at many-to-many and add many to many</font>

84
00:03:24,800 --> 00:03:27,872
<font color="#f6f6f6">This establishes a many-to-many relationship between the</font>

85
00:03:28,128 --> 00:03:29,664
<font color="#d6d6d6">Employee and the task</font>

86
00:03:29,920 --> 00:03:30,432
<font color="#c3c3c3">Glass</font>

87
00:03:31,200 --> 00:03:32,992
<font color="#e9e9e9">And the third example which we looked at</font>

88
00:03:33,760 --> 00:03:36,064
<font color="#d5d5d5">Full-time employee and part-time employee this</font>

89
00:03:36,576 --> 00:03:38,880
<font color="#d1d1d1">Classes are all map</font>

90
00:03:39,392 --> 00:03:42,208
<font color="#fbfbfb">Just a single table in the database</font>

91
00:03:42,464 --> 00:03:44,256
<font color="#e0e0e0">Map to employee</font>

92
00:03:51,936 --> 00:03:52,704
<font color="#a9a9a9">One table</font>

93
00:03:52,960 --> 00:03:55,264
<font color="#f1f1f1">All the subclasses of employee</font>

94
00:03:56,032 --> 00:03:56,800
<font color="#a1a1a1">2 to 1</font>

95
00:03:57,056 --> 00:03:58,848
<font color="#dcdcdc">Table and we're also saying</font>

96
00:03:59,104 --> 00:04:03,968
<font color="#dbdbdb">We distinguish is using the employee title we're also seeing that in here so what are you saying</font>

97
00:04:04,224 --> 00:04:06,016
<font color="#f1f1f1">The discriminator column is</font>

98
00:04:06,784 --> 00:04:09,344
<font color="#b0b0b0">In the specific step aunt in love</font>

99
00:04:12,160 --> 00:04:12,672
<font color="#d0d0d0">Mapping</font>

100
00:04:13,184 --> 00:04:14,464
<font color="#c1c1c1">Between your object</font>

101
00:04:14,976 --> 00:04:16,000
<font color="#afafaf">And the tables</font>

102
00:04:16,512 --> 00:04:19,071
<font color="#f5f5f5">The most important thing that you need to understand is</font>

103
00:04:19,327 --> 00:04:19,839
<font color="#c5c5c5">Weird</font>

104
00:04:20,095 --> 00:04:21,119
<font color="#f3f3f3">Trying to highlight</font>

105
00:04:24,447 --> 00:04:27,007
<font color="#e7e7e7">If you're not able to understand these things at in depth</font>

106
00:04:27,263 --> 00:04:28,543
<font color="#f5f5f5">That's not a problem at all</font>

107
00:04:29,055 --> 00:04:30,591
<font color="#f5f5f5">You're going to do a lot of this stuff</font>

108
00:04:30,847 --> 00:04:31,615
<font color="#acacac">Step by step</font>

109
00:04:32,639 --> 00:04:33,663
<font color="#f0f0f0">Future</font>

110
00:04:34,943 --> 00:04:37,759
<font color="#c8c8c8">InStep quick overview of the big</font>

111
00:04:41,855 --> 00:04:42,623
<font color="#e8e8e8">Objects</font>

112
00:04:42,879 --> 00:04:43,903
<font color="#c9c9c9">Two tables</font>

113
00:04:44,159 --> 00:04:46,207
<font color="#c9c9c9">We looked at how we can map</font>

114
00:04:50,047 --> 00:04:50,815
<font color="#f2f2f2">Table column</font>

115
00:04:52,607 --> 00:04:53,631
<font color="#f5f5f5">Examples of how to map</font>

116
00:04:53,887 --> 00:04:54,655
<font color="#e5e5e5">Relationship</font>

117
00:04:55,167 --> 00:04:56,959
<font color="#dcdcdc">And we look at how to map</font>

118
00:04:57,215 --> 00:04:58,495
<font color="#ededed">Inheritance relationship</font>

119
00:05:00,799 --> 00:05:02,079
<font color="#f5f5f5">The idea behind this step is to</font>

120
00:05:02,335 --> 00:05:04,383
<font color="#f0f0f0">Give you a quick flavor of what you can do with j</font>

121
00:05:04,639 --> 00:05:05,151
<font color="#f9f9f9">EPA</font>

122
00:05:05,407 --> 00:05:06,943
<font color="#f6f6f6">We have not really got our hands</font>

123
00:05:07,967 --> 00:05:08,991
<font color="#f6f6f6">In the subsequent steps</font>

124
00:05:09,503 --> 00:05:11,295
<font color="#e3e3e3">We'll start getting our hands</font>
